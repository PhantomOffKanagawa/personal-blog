---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";
import Breadcrumbs from "../../components/Breadcrumbs.astro";

const all = (await getCollection("reviews")).sort(
  (a, b) => b.data.createdDate.valueOf() - a.data.createdDate.valueOf(),
);
const isGF = (r: any) => r.data.tags?.some((t: string) => /\bgf\b|gluten[- ]?free/i.test(t));
const isDF = (r: any) => r.data.tags?.some((t: string) => /\bdf\b|dairy[- ]?free/i.test(t));
const isGadget = (r: any) => r.data.tags?.some((t: string) => /gadget|tech|device|hardware/i.test(t));
const categories: { key: string; title: string; filter: (r: any) => boolean }[] = [
  { key: "gf-food", title: "Gluten-free Food", filter: isGF },
  { key: "df-food", title: "Dairy-free Food", filter: isDF },
  { key: "gadgets", title: "Gadgets", filter: isGadget },
];
---

<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      main { width: 960px; }
      /* Compact grid: 3 columns desktop, 2 on tablets, 1 on mobile */
      ul { display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); gap: 1rem; list-style: none; margin: 0; padding: 0; }
      ul li { margin: 0; }
      ul li * { text-decoration: none; transition: 0.2s ease; }
      /* Thumbnail sizing */
      ul li img { width: 100%; height: 140px; background-color: var(--bg-elev-2); object-fit: contain; object-position: center; border-radius: 10px; display: block; margin: 0 0 0.4rem 0; }
      ul li a { display: block; }
      .title { margin: 0; color: var(--text); line-height: 1.15; font-size: 1rem; }
      .date { margin: 0.15rem 0 0; color: var(--muted); font-size: 0.85rem; }
      ul li a:hover h4, ul li a:hover .date { color: var(--accent); }
      ul a:hover img { box-shadow: var(--shadow); }
      @media (max-width: 1024px) {
        ul { grid-template-columns: repeat(2, minmax(0, 1fr)); }
        section ul li:first-child { grid-template-columns: 180px 1fr; grid-column: span 2; }
        section ul li:first-child img { height: 150px; }
      }
      @media (max-width: 720px) {
        ul { grid-template-columns: 1fr; }
        section ul li:first-child { grid-template-columns: 1fr; }
        section ul li:first-child img { height: 180px; }
        .title { font-size: 1rem; }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <Breadcrumbs />
      {categories.map((cat) => {
        const items = all.filter((r: any) => cat.filter(r)).slice(0, 6);
        if (!items.length) return null;
        return (
          <section>
            <div class="flex items-center justify-between mt-8 mb-2">
              <h2>{cat.title}</h2>
              <a class="text-sm" href={`${import.meta.env.BASE_URL}reviews/${cat.key}`}>View all →</a>
            </div>
            <ul>
              {items.map((post: any) => (
                <li>
                  <a href={`${import.meta.env.BASE_URL}reviews/${post.id}/`}>
                    {post.data.productImage && (
                      <Image width={400} height={300} src={post.data.productImage} alt="" />
                    )}
                    <h4 class="title">{post.data.productName}</h4>
                    <p class="date"><FormattedDate date={post.data.createdDate} /></p>
                  </a>
                </li>
              ))}
            </ul>
          </section>
        );
      })}
      {all.length > 0 && categories.every((c: any) => all.filter((r: any) => c.filter(r)).length === 0) && (
        <section>
          <div class="flex items-center justify-between mt-8 mb-2">
            <h2>Latest Reviews</h2>
            <a class="text-sm" href="/reviews">All reviews →</a>
          </div>
          <ul>
            {all.slice(0, 6).map((post: any) => (
              <li>
                <a href={`${import.meta.env.BASE_URL}reviews/${post.id}/`}>
                  {post.data.productImage && (
                    <Image width={400} height={300} src={post.data.productImage} alt="" />
                  )}
                  <h4 class="title">{post.data.productName}</h4>
                  <p class="date"><FormattedDate date={post.data.createdDate} /></p>
                </a>
              </li>
            ))}
          </ul>
        </section>
      )}
    </main>
    <Footer />
  </body>
</html>
