---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import ReadingProgress from '../components/ReadingProgress.astro';

type Props = CollectionEntry<'reviews'>['data'];

const { productName, brand, createdDate, ratingOverall = 0, productImage, tags, allergenInfo, price, stores } = Astro.props as Props;
---

<html lang="en">
	<head>
		<BaseHead title={productName} description='' />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--shadow);
			}
			.prose {
				width: 720px; max-width: calc(100% - 2em);
				margin: auto; padding: 1em; color: var(--text);
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--muted);
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<ReadingProgress />
		<Header />
		<main>
			<article>
				<div class="max-w-[960px] mx-auto px-4"><Breadcrumbs /></div>
				<div class="hero-image">
					{productImage && <Image width={1020} height={510} src={productImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={createdDate} />
						</div>
						<h1>{productName}</h1>
						<hr />
					</div>
					<div class="grid grid-cols-1 gap-6 items-start">
						<div>
							<div class="surface p-3 rounded-md mb-4 text-sm">
								<div class="flex flex-wrap gap-2 items-center">
									<span class="text-[var(--muted)]">Brand:</span><strong>{brand}</strong>
									<span class="ml-3 text-[var(--muted)]">Rating:</span>
									<span>
										{Array.from({ length: 5 }).map((_, i) => {
											if (ratingOverall >= i + 1) return '★';
											if (ratingOverall > i && ratingOverall < i + 1) return '⯪'; // Unicode half star
											return '☆';
										})}
									</span>
									{price && <><span class="ml-3 text-[var(--muted)]">Price:</span><span>${price.toFixed(2)}</span></>}
									{stores && stores.length && <><span class="ml-3 text-[var(--muted)]">Stores:</span><span>{stores.join(', ')}</span></>}
								</div>
								{tags && tags.length && (
									<div class="mt-2 flex flex-wrap gap-2">
										{tags.map(t => <span class="px-2 py-0.5 rounded-full border border-[var(--border)] text-[var(--muted)]">{t}</span>)}
									</div>
								)}
								{allergenInfo && allergenInfo.length && (
									<div class="mt-2 flex flex-wrap gap-2">
										{allergenInfo.map(t => <span class="px-2 py-0.5 rounded-full border border-[var(--border)] text-[var(--muted)]">{t}</span>)}
									</div>
								)}
							</div>
							<slot />
						</div>
					</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
