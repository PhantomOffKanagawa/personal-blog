---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');

// Build final href with BASE_URL for relative paths
const finalHref = typeof href === 'string' && href.startsWith('/')
	? import.meta.env.BASE_URL.replace(/\/$/, '') + href
	: href;
---

<a href={finalHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a { display: inline-block; padding: .5em .75em; color: var(--muted); border-bottom: 2px solid transparent; text-decoration: none; }
	a:hover { color: var(--text); border-bottom-color: color-mix(in oklab, var(--accent) 35%, transparent); }
	a.active { color: var(--text); border-bottom-color: var(--accent); }
</style>
